exit
path.split('.')
output_path
path
exit
to_binary(13)
symbol_table
symbol
continue
symbol_table
symbol
continue
to_binary(10)
symbol_table
symbol
continue
to_binary(symbol_table.get_address(symbol))
symbol
continue
to_binary(symbol_table.get_address(symbol))
symbol
exit
continue
symbol_table
exit
COMP_TABLE
continue
COMP_TABLE
exit
JUMP
COMP
continue
COMP
exit
COMP
continue
COMP
continue
COMP
exit
COMP
continue
COMP
exit
COMP
continue
COMP
exit
Code::COMP.frozen?
Immutable
Code::COMP
code::COMP
continue
Code::COMP
code::COMP
code
exit
code
continue
code
exit
code
continue
code
exit
code
tabl[second_pass.comp]
tabl['M']
tabl = { 'M' => '1110000' }
{'M' => '1110000'}
second_pass.comp
comp
hack_command
continue
hack_command
continue
exit
code.comp('D')
code.comp('D=M')
code.comp('M')
code.comp second_pass.comp
second_pass.comp
comp
second_pass.current
jump
dest
des
comp
hack_command
continue
hack_command
continue
hack_command
continue
hack_command
exit
second_pass.current
exit
"   R".strip
second_pass.current
exit
second_pass.current
second_pass.comp
symbol_table
comp
exit
second_pass.comp
second_pass.current
comp
exit
numeric? symbol
exit
numeric? "2"
numeric? symbol
symbol
exit
symbol
exit
symbol_table
exit
hack_commands
exit
hack_commands
exit
continue
parser.current
parser.comp
exit
parser.comp
exit
parser.comp.gsub /\r\n/, ''
parser.comp.gsub /\r\n/ ''
parser.comp
exit
parser.comp
parser.current
